{"version":3,"file":"js/captcha-legacy.0b148563.js","mappings":"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","sources":["webpack://c2c_ui/./node_modules/vue-recaptcha/dist/vue-recaptcha.es.js"],"sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar defer = function defer() {\n  var state = false; // Resolved or not\n\n  var callbacks = [];\n\n  var resolve = function resolve(val) {\n    if (state) {\n      return;\n    }\n\n    state = true;\n\n    for (var i = 0, len = callbacks.length; i < len; i++) {\n      callbacks[i](val);\n    }\n  };\n\n  var then = function then(cb) {\n    if (!state) {\n      callbacks.push(cb);\n      return;\n    }\n\n    cb();\n  };\n\n  var deferred = {\n    resolved: function resolved() {\n      return state;\n    },\n    resolve: resolve,\n    promise: {\n      then: then\n    }\n  };\n  return deferred;\n};\n\nvar ownProp = Object.prototype.hasOwnProperty;\nfunction createRecaptcha() {\n  var deferred = defer();\n  return {\n    notify: function notify() {\n      deferred.resolve();\n    },\n    wait: function wait() {\n      return deferred.promise;\n    },\n    render: function render(ele, options, cb) {\n      this.wait().then(function () {\n        cb(window.grecaptcha.render(ele, options));\n      });\n    },\n    reset: function reset(widgetId) {\n      if (typeof widgetId === 'undefined') {\n        return;\n      }\n\n      this.assertLoaded();\n      this.wait().then(function () {\n        return window.grecaptcha.reset(widgetId);\n      });\n    },\n    execute: function execute(widgetId) {\n      if (typeof widgetId === 'undefined') {\n        return;\n      }\n\n      this.assertLoaded();\n      this.wait().then(function () {\n        return window.grecaptcha.execute(widgetId);\n      });\n    },\n    checkRecaptchaLoad: function checkRecaptchaLoad() {\n      if (ownProp.call(window, 'grecaptcha') && ownProp.call(window.grecaptcha, 'render')) {\n        this.notify();\n      }\n    },\n    assertLoaded: function assertLoaded() {\n      if (!deferred.resolved()) {\n        throw new Error('ReCAPTCHA has not been loaded');\n      }\n    }\n  };\n}\nvar recaptcha = createRecaptcha();\n\nif (typeof window !== 'undefined') {\n  window.vueRecaptchaApiLoaded = recaptcha.notify;\n}\n\nvar VueRecaptcha = {\n  name: 'VueRecaptcha',\n  props: {\n    sitekey: {\n      type: String,\n      required: true\n    },\n    theme: {\n      type: String\n    },\n    badge: {\n      type: String\n    },\n    type: {\n      type: String\n    },\n    size: {\n      type: String\n    },\n    tabindex: {\n      type: String\n    },\n    loadRecaptchaScript: {\n      type: Boolean,\n      \"default\": false\n    },\n    recaptchaScriptId: {\n      type: String,\n      \"default\": '__RECAPTCHA_SCRIPT'\n    },\n    recaptchaHost: {\n      type: String,\n      \"default\": 'www.google.com'\n    },\n    language: {\n      type: String,\n      \"default\": ''\n    }\n  },\n  beforeMount: function beforeMount() {\n    if (this.loadRecaptchaScript) {\n      if (!document.getElementById(this.recaptchaScriptId)) {\n        // Note: vueRecaptchaApiLoaded load callback name is per the latest documentation\n        var script = document.createElement('script');\n        script.id = this.recaptchaScriptId;\n        script.src = \"https://\" + this.recaptchaHost + \"/recaptcha/api.js?onload=vueRecaptchaApiLoaded&render=explicit&hl=\" + this.language;\n        script.async = true;\n        script.defer = true;\n        document.head.appendChild(script);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    recaptcha.checkRecaptchaLoad();\n\n    var opts = _extends({}, this.$props, {\n      callback: this.emitVerify,\n      'expired-callback': this.emitExpired,\n      'error-callback': this.emitError\n    });\n\n    var container = this.$slots[\"default\"] ? this.$el.children[0] : this.$el;\n    recaptcha.render(container, opts, function (id) {\n      _this.$widgetId = id;\n\n      _this.$emit('render', id);\n    });\n  },\n  methods: {\n    reset: function reset() {\n      recaptcha.reset(this.$widgetId);\n    },\n    execute: function execute() {\n      recaptcha.execute(this.$widgetId);\n    },\n    emitVerify: function emitVerify(response) {\n      this.$emit('verify', response);\n    },\n    emitExpired: function emitExpired() {\n      this.$emit('expired');\n    },\n    emitError: function emitError() {\n      this.$emit('error');\n    }\n  },\n  render: function render(h) {\n    return h('div', {}, this.$slots[\"default\"]);\n  }\n};\n\nexport default VueRecaptcha;\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","defer","state","callbacks","resolve","val","len","then","cb","push","deferred","resolved","promise","ownProp","createRecaptcha","notify","wait","render","ele","options","window","grecaptcha","reset","widgetId","assertLoaded","execute","checkRecaptchaLoad","Error","recaptcha","vueRecaptchaApiLoaded","VueRecaptcha","name","props","sitekey","type","String","required","theme","badge","size","tabindex","loadRecaptchaScript","Boolean","recaptchaScriptId","recaptchaHost","language","beforeMount","document","getElementById","script","createElement","id","src","async","head","appendChild","mounted","_this","opts","$props","callback","emitVerify","emitExpired","emitError","container","$slots","$el","children","$widgetId","$emit","methods","response","h"],"sourceRoot":""}